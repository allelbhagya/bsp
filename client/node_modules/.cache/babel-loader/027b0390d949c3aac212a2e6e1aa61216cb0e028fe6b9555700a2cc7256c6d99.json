{"ast":null,"code":"var _jsxFileName = \"/Users/bhagya/Desktop/code/blogs/client/src/pages/PostPage.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PostPage() {\n  _s();\n  const [postInfo, setPostInfo] = useState(null);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    const fetchPost = async () => {\n      try {\n        const response = await fetch(`http://localhost:4000/post/${id}`);\n        const postData = await response.json();\n        setPostInfo(postData);\n      } catch (error) {\n        console.error(\"Error fetching post:\", error);\n      }\n    };\n    fetchPost();\n  }, [id]);\n  if (!postInfo) return '';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: postInfo.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"time\", {\n      children: postInfo.createdAt\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"author\",\n      children: [\"by \", postInfo.author.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://localhost:4000/${postInfo.cover}`,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: postInfo.content\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(PostPage, \"IPnvg+RSP7wgje5GLXQ0Smq0TTQ=\", false, function () {\n  return [useParams];\n});\n_c = PostPage;\nvar _c;\n$RefreshReg$(_c, \"PostPage\");","map":{"version":3,"names":["useEffect","useState","useParams","jsxDEV","_jsxDEV","PostPage","_s","postInfo","setPostInfo","id","fetchPost","response","fetch","postData","json","error","console","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","createdAt","author","username","src","cover","alt","dangerouslySetInnerHTML","__html","content","_c","$RefreshReg$"],"sources":["/Users/bhagya/Desktop/code/blogs/client/src/pages/PostPage.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nexport default function PostPage() {\n  const [postInfo, setPostInfo] = useState(null);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchPost = async () => {\n      try {\n        const response = await fetch(`http://localhost:4000/post/${id}`);\n        const postData = await response.json();\n        setPostInfo(postData);\n      } catch (error) {\n        console.error(\"Error fetching post:\", error);\n      }\n    };\n\n    fetchPost();\n  }, [id]); \n  if(!postInfo) return '';\n\n  return (\n    <div className=\"post-page\">\n            <h1>{postInfo.title}</h1>\n            <time>{postInfo.createdAt}</time>\n            <div className=\"author\">by {postInfo.author.username}</div>\n        <div className=\"image\">\n            <img src = {`http://localhost:4000/${postInfo.cover}`} alt=\"\"/>\n        </div>\n\n    <div dangerouslySetInnerHTML={{__html:postInfo.content}} />\n    </div>\n  );\n}\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM;IAAEQ;EAAG,CAAC,GAAGP,SAAS,CAAC,CAAC;EAE1BF,SAAS,CAAC,MAAM;IACd,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,8BAA6BH,EAAG,EAAC,CAAC;QAChE,MAAMI,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QACtCN,WAAW,CAACK,QAAQ,CAAC;MACvB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDL,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACD,EAAE,CAAC,CAAC;EACR,IAAG,CAACF,QAAQ,EAAE,OAAO,EAAE;EAEvB,oBACEH,OAAA;IAAKa,SAAS,EAAC,WAAW;IAAAC,QAAA,gBAClBd,OAAA;MAAAc,QAAA,EAAKX,QAAQ,CAACY;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACzBnB,OAAA;MAAAc,QAAA,EAAOX,QAAQ,CAACiB;IAAS;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACjCnB,OAAA;MAAKa,SAAS,EAAC,QAAQ;MAAAC,QAAA,GAAC,KAAG,EAACX,QAAQ,CAACkB,MAAM,CAACC,QAAQ;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC/DnB,OAAA;MAAKa,SAAS,EAAC,OAAO;MAAAC,QAAA,eAClBd,OAAA;QAAKuB,GAAG,EAAK,yBAAwBpB,QAAQ,CAACqB,KAAM,EAAE;QAACC,GAAG,EAAC;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D,CAAC,eAEVnB,OAAA;MAAK0B,uBAAuB,EAAE;QAACC,MAAM,EAACxB,QAAQ,CAACyB;MAAO;IAAE;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEV;AAACjB,EAAA,CA/BuBD,QAAQ;EAAA,QAEfH,SAAS;AAAA;AAAA+B,EAAA,GAFF5B,QAAQ;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import{useContext,useState}from\"react\";import{Navigate}from'react-router-dom';import{UserContext}from\"../UserContext\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function LoginPage(){const[username,setUsername]=useState('');const[password,setPassword]=useState('');const[redirect,setRedirect]=useState(false);const{setUserInfo}=useContext(UserContext);async function login(ev){ev.preventDefault();try{const response=await fetch('http://localhost:4000/login',{method:'POST',body:JSON.stringify({username,password}),headers:{'Content-Type':'application/json'},credentials:'include'});if(!response.ok){alert('wrong credentials');const errorMessage=await response.text();throw new Error(\"HTTP error! Status: \".concat(response.status,\", Message: \").concat(errorMessage));}if(response.ok){response.json().then(userInfo=>{setUserInfo(userInfo);setRedirect(true);});}const data=await response.json();console.log('Registration successful:',data);}catch(error){console.error('Error during registration:',error.message);}}if(redirect){return/*#__PURE__*/_jsx(Navigate,{to:'/'});}return/*#__PURE__*/_jsxs(\"form\",{className:\"login\",onSubmit:login,children:[/*#__PURE__*/_jsx(\"h1\",{children:\"login\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"username\",value:username,onChange:ev=>setUsername(ev.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"password\",value:password,onChange:ev=>setPassword(ev.target.value)}),/*#__PURE__*/_jsx(\"button\",{children:\"login\"})]});}","map":{"version":3,"names":["useContext","useState","Navigate","UserContext","jsx","_jsx","jsxs","_jsxs","LoginPage","username","setUsername","password","setPassword","redirect","setRedirect","setUserInfo","login","ev","preventDefault","response","fetch","method","body","JSON","stringify","headers","credentials","ok","alert","errorMessage","text","Error","concat","status","json","then","userInfo","data","console","log","error","message","to","className","onSubmit","children","type","placeholder","value","onChange","target"],"sources":["/Users/bhagya/Desktop/code/blogs/client/src/pages/LoginPage.js"],"sourcesContent":["import { useContext, useState } from \"react\";\nimport {Navigate} from 'react-router-dom';\nimport { UserContext } from \"../UserContext\";\n\nexport default function LoginPage(){\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [redirect, setRedirect] = useState(false);\n    const {setUserInfo} = useContext(UserContext);\n    async function login(ev) {\n        ev.preventDefault();\n      \n        try {\n          const response = await fetch('http://localhost:4000/login', {\n            method: 'POST',\n            body: JSON.stringify({ username, password }),\n            headers: { 'Content-Type': 'application/json' },\n            credentials: 'include',\n\n          });\n      \n          if (!response.ok) {\n            alert('wrong credentials')\n            const errorMessage = await response.text();\n            throw new Error(`HTTP error! Status: ${response.status}, Message: ${errorMessage}`);\n          }\n          if(response.ok){\n            response.json().then(userInfo =>{\n              setUserInfo(userInfo);\n              setRedirect(true);\n            })\n\n          }\n      \n          const data = await response.json();\n          console.log('Registration successful:', data);\n        } catch (error) {\n          console.error('Error during registration:', error.message);\n        }\n      }\n      if(redirect){\n        return <Navigate to={'/'} />\n      }\n    return(\n        <form className=\"login\" onSubmit={login}>\n            <h1>login</h1>\n            <input type = \"text\" \n            placeholder=\"username\" \n            value = {username}\n            onChange={ev=> setUsername(ev.target.value)}/>\n            <input type=\"password\" \n            placeholder=\"password\"\n            value = {password}\n            onChange={ev=> setPassword(ev.target.value)}/>\n            <button>login</button>\n        </form>\n    );\n}"],"mappings":"AAAA,OAASA,UAAU,CAAEC,QAAQ,KAAQ,OAAO,CAC5C,OAAQC,QAAQ,KAAO,kBAAkB,CACzC,OAASC,WAAW,KAAQ,gBAAgB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE7C,cAAe,SAAS,CAAAC,SAASA,CAAA,CAAE,CAC/B,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACU,QAAQ,CAAEC,WAAW,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACY,QAAQ,CAAEC,WAAW,CAAC,CAAGb,QAAQ,CAAC,KAAK,CAAC,CAC/C,KAAM,CAACc,WAAW,CAAC,CAAGf,UAAU,CAACG,WAAW,CAAC,CAC7C,cAAe,CAAAa,KAAKA,CAACC,EAAE,CAAE,CACrBA,EAAE,CAACC,cAAc,CAAC,CAAC,CAEnB,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,6BAA6B,CAAE,CAC1DC,MAAM,CAAE,MAAM,CACdC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEf,QAAQ,CAAEE,QAAS,CAAC,CAAC,CAC5Cc,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,WAAW,CAAE,SAEf,CAAC,CAAC,CAEF,GAAI,CAACP,QAAQ,CAACQ,EAAE,CAAE,CAChBC,KAAK,CAAC,mBAAmB,CAAC,CAC1B,KAAM,CAAAC,YAAY,CAAG,KAAM,CAAAV,QAAQ,CAACW,IAAI,CAAC,CAAC,CAC1C,KAAM,IAAI,CAAAC,KAAK,wBAAAC,MAAA,CAAwBb,QAAQ,CAACc,MAAM,gBAAAD,MAAA,CAAcH,YAAY,CAAE,CAAC,CACrF,CACA,GAAGV,QAAQ,CAACQ,EAAE,CAAC,CACbR,QAAQ,CAACe,IAAI,CAAC,CAAC,CAACC,IAAI,CAACC,QAAQ,EAAG,CAC9BrB,WAAW,CAACqB,QAAQ,CAAC,CACrBtB,WAAW,CAAC,IAAI,CAAC,CACnB,CAAC,CAAC,CAEJ,CAEA,KAAM,CAAAuB,IAAI,CAAG,KAAM,CAAAlB,QAAQ,CAACe,IAAI,CAAC,CAAC,CAClCI,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAEF,IAAI,CAAC,CAC/C,CAAE,MAAOG,KAAK,CAAE,CACdF,OAAO,CAACE,KAAK,CAAC,4BAA4B,CAAEA,KAAK,CAACC,OAAO,CAAC,CAC5D,CACF,CACA,GAAG5B,QAAQ,CAAC,CACV,mBAAOR,IAAA,CAACH,QAAQ,EAACwC,EAAE,CAAE,GAAI,CAAE,CAAC,CAC9B,CACF,mBACInC,KAAA,SAAMoC,SAAS,CAAC,OAAO,CAACC,QAAQ,CAAE5B,KAAM,CAAA6B,QAAA,eACpCxC,IAAA,OAAAwC,QAAA,CAAI,OAAK,CAAI,CAAC,cACdxC,IAAA,UAAOyC,IAAI,CAAG,MAAM,CACpBC,WAAW,CAAC,UAAU,CACtBC,KAAK,CAAIvC,QAAS,CAClBwC,QAAQ,CAAEhC,EAAE,EAAGP,WAAW,CAACO,EAAE,CAACiC,MAAM,CAACF,KAAK,CAAE,CAAC,CAAC,cAC9C3C,IAAA,UAAOyC,IAAI,CAAC,UAAU,CACtBC,WAAW,CAAC,UAAU,CACtBC,KAAK,CAAIrC,QAAS,CAClBsC,QAAQ,CAAEhC,EAAE,EAAGL,WAAW,CAACK,EAAE,CAACiC,MAAM,CAACF,KAAK,CAAE,CAAC,CAAC,cAC9C3C,IAAA,WAAAwC,QAAA,CAAQ,OAAK,CAAQ,CAAC,EACpB,CAAC,CAEf"},"metadata":{},"sourceType":"module","externalDependencies":[]}
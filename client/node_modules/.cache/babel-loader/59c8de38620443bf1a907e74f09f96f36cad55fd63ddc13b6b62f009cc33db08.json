{"ast":null,"code":"var _jsxFileName = \"/Users/bhagya/Desktop/code/bspweb/client/src/pages/LoginPage.js\",\n  _s = $RefreshSig$();\nimport { useContext, useState } from \"react\";\nimport { Navigate } from 'react-router-dom';\nimport { UserContext } from \"../UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginPage() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [redirect, setRedirect] = useState(false);\n  const {\n    setUserInfo\n  } = useContext(UserContext);\n  async function login(ev) {\n    ev.preventDefault();\n    try {\n      const response = await fetch('http://localhost:4000/login', {\n        method: 'POST',\n        body: JSON.stringify({\n          username,\n          password\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include'\n      });\n      if (!response.ok) {\n        alert('wrong credentials');\n        const errorMessage = await response.text();\n        throw new Error(`HTTP error! Status: ${response.status}, Message: ${errorMessage}`);\n      }\n      if (response.ok) {\n        response.json().then(userInfo => {\n          setUserInfo(userInfo);\n          setRedirect(true);\n        });\n      }\n      const data = await response.json();\n      console.log('Registration successful:', data);\n    } catch (error) {\n      console.error('Error during registration:', error.message);\n    }\n  }\n  if (redirect) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: '/'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"login\",\n    onSubmit: login,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"username\",\n      value: username,\n      onChange: ev => setUsername(ev.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"password\",\n      value: password,\n      onChange: ev => setPassword(ev.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_s(LoginPage, \"LA8c2h07KUkEE8TJL/zG+UM4GGk=\");\n_c = LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["useContext","useState","Navigate","UserContext","jsxDEV","_jsxDEV","LoginPage","_s","username","setUsername","password","setPassword","redirect","setRedirect","setUserInfo","login","ev","preventDefault","response","fetch","method","body","JSON","stringify","headers","credentials","ok","alert","errorMessage","text","Error","status","json","then","userInfo","data","console","log","error","message","to","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","children","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["/Users/bhagya/Desktop/code/bspweb/client/src/pages/LoginPage.js"],"sourcesContent":["import { useContext, useState } from \"react\";\nimport {Navigate} from 'react-router-dom';\nimport { UserContext } from \"../UserContext\";\n\nexport default function LoginPage(){\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [redirect, setRedirect] = useState(false);\n    const {setUserInfo} = useContext(UserContext);\n    async function login(ev) {\n        ev.preventDefault();\n      \n        try {\n          const response = await fetch('http://localhost:4000/login', {\n            method: 'POST',\n            body: JSON.stringify({ username, password }),\n            headers: { 'Content-Type': 'application/json' },\n            credentials: 'include',\n\n          });\n      \n          if (!response.ok) {\n            alert('wrong credentials')\n            const errorMessage = await response.text();\n            throw new Error(`HTTP error! Status: ${response.status}, Message: ${errorMessage}`);\n          }\n          if(response.ok){\n            response.json().then(userInfo =>{\n              setUserInfo(userInfo);\n              setRedirect(true);\n            })\n\n          }\n      \n          const data = await response.json();\n          console.log('Registration successful:', data);\n        } catch (error) {\n          console.error('Error during registration:', error.message);\n        }\n      }\n      if(redirect){\n        return <Navigate to={'/'} />\n      }\n    return(\n        <form className=\"login\" onSubmit={login}>\n            <h1>login</h1>\n            <input type = \"text\" \n            placeholder=\"username\" \n            value = {username}\n            onChange={ev=> setUsername(ev.target.value)}/>\n            <input type=\"password\" \n            placeholder=\"password\"\n            value = {password}\n            onChange={ev=> setPassword(ev.target.value)}/>\n            <button>login</button>\n        </form>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
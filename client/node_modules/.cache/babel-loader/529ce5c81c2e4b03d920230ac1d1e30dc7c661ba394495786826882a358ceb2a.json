{"ast":null,"code":"var _jsxFileName = \"/Users/bhagya/Desktop/code/blogs/client/src/pages/RegisterPage.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RegisterPage() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPasword] = useState('');\n  async function register(ev) {\n    ev.preventDefault();\n    try {\n      const response = await fetch('http://localhost:4000/register', {\n        method: 'POST',\n        body: JSON.stringify({\n          username,\n          password\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        const errorMessage = await response.text();\n        throw new Error(`HTTP error! Status: ${response.status}, Message: ${errorMessage}`);\n      }\n      const data = await response.json();\n      console.log('Registration successful:', data);\n    } catch (error) {\n      console.error('Error during registration:', error.message);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"register\",\n    onSubmit: register,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"username\",\n      value: username,\n      onChange: ev => setUsername(ev.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"password\",\n      value: password,\n      onChange: ev => setPasword(ev.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(RegisterPage, \"EaUTPh/MZanBeKcTCGlcRmQKHqA=\");\n_c = RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","RegisterPage","_s","username","setUsername","password","setPasword","register","ev","preventDefault","response","fetch","method","body","JSON","stringify","headers","ok","errorMessage","text","Error","status","data","json","console","log","error","message","className","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["/Users/bhagya/Desktop/code/blogs/client/src/pages/RegisterPage.js"],"sourcesContent":["\nimport { useState } from \"react\"\n\n\nexport default function RegisterPage(){\n    const [username, setUsername] = useState('');\n    const [password, setPasword] = useState('');\n    async function register(ev) {\n        ev.preventDefault();\n      \n        try {\n            const response = await fetch('http://localhost:4000/register', {\n                method: 'POST',\n                body: JSON.stringify({ username, password }),\n                headers: { 'Content-Type': 'application/json' },\n              });\n              \n      \n          if (!response.ok) {\n            const errorMessage = await response.text();\n            throw new Error(`HTTP error! Status: ${response.status}, Message: ${errorMessage}`);\n          }\n      \n          const data = await response.json();\n          console.log('Registration successful:', data);\n        } catch (error) {\n          console.error('Error during registration:', error.message);\n        }\n      }\n      \n      \n    return(\n        <form className=\"register\" onSubmit={register}>\n            <h1>register</h1>\n            <input type = \"text\" \n            placeholder=\"username\" \n            value = {username}\n            onChange={ev=> setUsername(ev.target.value)}/>\n            <input type=\"password\" \n            placeholder=\"password\" \n            value = {password}\n            onChange={ev=> setPasword(ev.target.value)}/>\n            <button>register</button>\n\n        </form>\n    )\n}"],"mappings":";;AACA,SAASA,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGhC,eAAe,SAASC,YAAYA,CAAA,EAAE;EAAAC,EAAA;EAClC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,QAAQ,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC3C,eAAeS,QAAQA,CAACC,EAAE,EAAE;IACxBA,EAAE,CAACC,cAAc,CAAC,CAAC;IAEnB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;QAC3DC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEZ,QAAQ;UAAEE;QAAS,CAAC,CAAC;QAC5CW,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB;MAChD,CAAC,CAAC;MAGN,IAAI,CAACN,QAAQ,CAACO,EAAE,EAAE;QAChB,MAAMC,YAAY,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QAC1C,MAAM,IAAIC,KAAK,CAAE,uBAAsBV,QAAQ,CAACW,MAAO,cAAaH,YAAa,EAAC,CAAC;MACrF;MAEA,MAAMI,IAAI,GAAG,MAAMZ,QAAQ,CAACa,IAAI,CAAC,CAAC;MAClCC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEH,IAAI,CAAC;IAC/C,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAACC,OAAO,CAAC;IAC5D;EACF;EAGF,oBACI3B,OAAA;IAAM4B,SAAS,EAAC,UAAU;IAACC,QAAQ,EAAEtB,QAAS;IAAAuB,QAAA,gBAC1C9B,OAAA;MAAA8B,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBlC,OAAA;MAAOmC,IAAI,EAAG,MAAM;MACpBC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAIlC,QAAS;MAClBmC,QAAQ,EAAE9B,EAAE,IAAGJ,WAAW,CAACI,EAAE,CAAC+B,MAAM,CAACF,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC9ClC,OAAA;MAAOmC,IAAI,EAAC,UAAU;MACtBC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAIhC,QAAS;MAClBiC,QAAQ,EAAE9B,EAAE,IAAGF,UAAU,CAACE,EAAE,CAAC+B,MAAM,CAACF,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC7ClC,OAAA;MAAA8B,QAAA,EAAQ;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEvB,CAAC;AAEf;AAAChC,EAAA,CA1CuBD,YAAY;AAAAuC,EAAA,GAAZvC,YAAY;AAAA,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}